openapi: 3.0.0
info:
  title: Marketplace API for VK
  version: 1.0.1
  description: |
    REST API для маркетплейса

servers:
  - url: http://kisel76.ru:8080

paths:
  /register:
    post:
      summary: Регистрация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: Успешная регистрация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Неверные данные для регистрации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: VALIDATION_ERROR
                error: Поле password должно содержать минимум 8 символов
        '409':
          description: Пользователь уже существует
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: USER_ALREADY_EXISTS
                error: Логин login уже зарегистрирован

  /login:
    post:
      summary: Авторизация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Успешная авторизация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Не указаны логин или пароль
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: VALIDATION_ERROR
                error: Все поля авторизации должны быть заполнены
        '401':
          description: Неверные учётные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: INVALID_CREDENTIALS
                error: Неверный логин или пароль

  /ads:
    post:
      summary: Размещение объявления
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdRequest'
      responses:
        '200':
          description: Объявление размещено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdResponse'
        '400':
          description: Невалидные данные объявления
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: VALIDATION_ERROR
                error: Все поля должны быть корректно заполнены
        '401':
          description: Неавторизованный доступ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: UNAUTHORIZED
                error: Необходим токен авторизации

    get:
      summary: Получение списка объявлений
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: sort_by
          schema:
            type: string
            enum: [date, price]
        - in: query
          name: min_price
          schema:
            type: number
        - in: query
          name: max_price
          schema:
            type: number
      responses:
        '200':
          description: Список объявлений
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ErrorResponse:
      type: object
      required: [code, description]
      properties:
        code:
          type: integer
          example: 401
        error_description:
          type: string
          example: Описание ошибки

    RegisterRequest:
      type: object
      required: [login, password]
      properties:
        login:
          type: string
          example: login123
        password:
          type: string
          example: qwerty123

    LoginRequest:
      type: object
      required: [login, password]
      properties:
        login:
          type: string
          example: login123
        password:
          type: string
          example: qwerty123

    AuthResponse:
      type: object
      properties:
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

    UserResponse:
      type: object
      properties:
        id:
          type: integer
        login:
          type: string

    AdRequest:
      type: object
      required: [title, description, image_url, price]
      properties:
        title:
          type: string
        description:
          type: string
        image_url:
          type: string
        price:
          type: number

    AdResponse:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        image_url:
          type: string
        price:
          type: number
        author_login:
          type: string
        is_owner:
          type: boolean